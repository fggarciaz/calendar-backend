{"version":3,"sources":["types/types.js","reducers/uiReducer.js","reducers/calendarReducer.js","reducers/authReducer.js","reducers/rootReducer.js","store/store.js","hooks/useForm.js","helpers/fetch.js","helpers/prepareEvents.js","actions/events.js","actions/auth.js","components/auth/LoginScreen.jsx","components/ui/Navbar.jsx","helpers/calendar-messages-es.js","components/calendar/CalendarEvent.jsx","actions/ui.js","components/calendar/CalendarModal.jsx","components/ui/AddNewFav.jsx","components/ui/DeleteEventFab.jsx","components/calendar/CalendarScreen.jsx","router/PublicRoute.jsx","router/PrivateRoute.jsx","router/AppRouter.jsx","CalendarApp.jsx","index.js"],"names":["types","initialState","modalOpen","events","activeEvent","checking","rootReducer","combineReducers","ui","state","action","type","calendar","payload","map","e","id","filter","auth","composeEnhancers","window","__REDUX_DEVTOOLS_EXTENSION_COMPOSE__","compose","store","createStore","applyMiddleware","thunk","useForm","useState","values","setValues","reset","handleInputChange","target","name","value","baseUrl","process","fetchSinToken","endpoint","data","method","url","fetch","headers","body","JSON","stringify","fetchConToken","token","localStorage","getItem","prepareEvents","start","moment","toDate","end","eventAddNew","event","eventCleanActiveEvent","eventUpdated","eventDeleted","eventLoaded","checkingFinish","login","user","startLogout","dispatch","clear","logout","LoginScreen","useDispatch","lEmail","lPassword","formLoginValues","handleLoginInputChange","rName","rEmail","rPassword1","rPassword2","formRegisterValues","handleRegisterInputChange","className","onSubmit","email","password","preventDefault","a","resp","json","ok","setItem","Date","getTime","uid","Swal","fire","msg","placeholder","onChange","Navbar","useSelector","onClick","messages","allDay","previous","next","today","month","week","day","agenda","date","time","noEventsInRange","showMore","total","CalendarEvent","title","uiOpenModal","customStyles","content","top","left","right","bottom","marginRight","transform","Modal","setAppElement","now","minutes","seconds","add","nowPlusOne","clone","initEvent","notes","CalendarModal","dateStart","setDateStart","dateEnd","setDateEnd","titleValid","setTitleValid","formValues","setFormValues","useEffect","closeModal","isOpen","onRequestClose","style","closeTimeoutMS","overlayClassName","momentStart","momentEnd","isSameOrAfter","trim","length","console","log","getState","evento","_id","eventStartAddNew","minDate","autoComplete","rows","AddNewFav","DeleteEventFab","locale","localizer","momentLocalizer","CalendarScreen","lastView","setLastView","eventos","startAccessor","endAccessor","eventPropGetter","isSelected","backgroundColor","borderRadius","opacity","display","color","onDoubleClickEvent","onSelectEvent","onView","view","onSelectSlot","selectable","components","PublicRoute","isAuthenticated","Component","component","rest","props","to","PrivateRoute","AppRouter","exact","path","CalendarApp","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.fc3babfb.chunk.js","sourcesContent":["export const types = {\r\n\r\n    uiOpenModal: '[ui] Open modal',\r\n    uiCloseModal: '[ui] Close modal',\r\n\r\n    eventSetActive: '[event] Set active',\r\n    eventStartAddNew: '[event] Start add new',\r\n    eventAddNew: '[event] Add new',\r\n    eventClearActiveEvent: '[event] Clear Active Event',\r\n    eventUpdated: '[event] Event updated',\r\n    eventDeleted: '[event] Event deleted',\r\n    eventLoaded: '[event] Events loaded',\r\n    eventClearEvents: '[event] Clear events',\r\n\r\n    authCheckingFinish: '[auth] Finish checking login state',\r\n    authStartLogin: '[auth] StartLogin',\r\n    authLogin: '[auth] Login',\r\n    authStartRegister: '[auth] Start Register',\r\n    authStartTokenRenew: '[auth] Start token renew',\r\n    authLogout: '[auth] Logout',\r\n\r\n}","import { types } from \"../types/types\";\r\n\r\nconst initialState = {\r\n    modalOpen: false,\r\n};\r\n\r\nexport const uiReducer = (state=initialState, action) => {\r\n\r\n    switch (action.type) {\r\n        case types.uiOpenModal:\r\n            return {\r\n                ...state,\r\n                modalOpen: true\r\n            };\r\n        \r\n        case types.uiCloseModal:\r\n            return {\r\n                ...state,\r\n                modalOpen: false\r\n            };\r\n    \r\n        default:\r\n            return state;\r\n    }\r\n\r\n}","\r\nimport { types } from '../types/types';\r\n\r\n/* {\r\n    id: new Date().getTime(),\r\n    title: 'Cumpleaños del jefe',\r\n    start: moment().toDate(),\r\n    end: moment().add(2, 'hours').toDate(),\r\n    notes: 'Comprar el pastel',\r\n    user: {\r\n        _id: '123',\r\n        name: 'Fabricio'\r\n    }\r\n} */\r\n\r\nconst initialState = {\r\n    events: [],\r\n    activeEvent: null\r\n};\r\n\r\nexport const calendarReducer = (state=initialState, action) => {\r\n    switch (action.type) {\r\n\r\n        case types.eventSetActive:\r\n            return{\r\n                ...state,\r\n                activeEvent: action.payload\r\n            }\r\n        \r\n        case types.eventAddNew:\r\n            return {\r\n                ...state,\r\n                events: [\r\n                    ...state.events,\r\n                    action.payload\r\n                ]\r\n            }\r\n        \r\n        case types.eventClearActiveEvent:\r\n            return {\r\n                ...state,\r\n                activeEvent: null\r\n            }\r\n        \r\n        case types.eventUpdated:\r\n            return {\r\n                ...state,\r\n                events: state.events.map(\r\n                    e => (e.id === action.payload.id) ? action.payload : e\r\n                )\r\n            }\r\n        \r\n        case types.eventDeleted:\r\n            return {\r\n                ...state,\r\n                events: state.events.filter(\r\n                    e => (e.id !== state.activeEvent.id)\r\n                ),\r\n                activeEvent : null\r\n            }\r\n        \r\n        case types.eventLoaded:\r\n            return {\r\n                ...state,\r\n                events: [ ...action.payload ]\r\n            }\r\n        \r\n        case types.eventClearEvents:\r\n            return {\r\n                ...initialState\r\n            }\r\n\r\n        default:\r\n            return state;\r\n\r\n    }\r\n}","import { types } from \"../types/types\";\r\n\r\nconst initialState = {\r\n    checking: true,\r\n    //uid: null,\r\n    //name: null\r\n}\r\n\r\nexport const authReducer = ( state=initialState, action ) => {\r\n    switch (action.type) {\r\n\r\n        case types.authLogin:\r\n            return {\r\n                ...state,\r\n                ...action.payload,\r\n                checking: false\r\n            }\r\n        \r\n        case types.authCheckingFinish:\r\n            return {\r\n                ...state,\r\n                checking: false\r\n            }\r\n        \r\n        case types.authLogout:\r\n            return {\r\n                checking: false\r\n            }\r\n            \r\n        default:\r\n            return state;\r\n    }\r\n}","import { combineReducers } from \"redux\";\r\nimport { uiReducer } from \"./uiReducer\";\r\nimport { calendarReducer } from \"./calendarReducer\";\r\nimport { authReducer } from \"./authReducer\";\r\n\r\n\r\nexport const rootReducer = combineReducers({\r\n    ui: uiReducer,\r\n    calendar: calendarReducer,\r\n    auth: authReducer\r\n\r\n})","import { createStore, compose, applyMiddleware } from 'redux';\r\nimport { rootReducer } from '../reducers/rootReducer';\r\nimport thunk from 'redux-thunk';\r\n\r\nconst composeEnhancers = (typeof window !== 'undefined' && window.__REDUX_DEVTOOLS_EXTENSION_COMPOSE__) || compose;\r\n\r\nexport const store = createStore(\r\n    rootReducer,\r\n    composeEnhancers(\r\n        applyMiddleware(thunk)\r\n    )\r\n);","import { useState } from 'react';\r\n\r\nexport const useForm = (initialState = {}) => {\r\n    //\r\n    const [values, setValues] = useState(initialState);\r\n\r\n    const reset = () => {\r\n        setValues(initialState);\r\n    };\r\n\r\n    const handleInputChange = ({ target }) => {\r\n        setValues({\r\n            ...values,\r\n            [target.name]: target.value,\r\n        });\r\n    };\r\n\r\n    return [values, handleInputChange, reset];\r\n};","const baseUrl = process.env.REACT_APP_API_URL;\r\n\r\nconst fetchSinToken = (endpoint, data, method = 'GET') => {\r\n\r\n    const url = `${baseUrl}/${endpoint}`;\r\n\r\n    if (method === 'GET') {\r\n        return fetch(url);\r\n    } else {\r\n        return fetch(url, {\r\n            method,\r\n            headers: {\r\n                'Content-type': 'application/json'\r\n            },\r\n            body: JSON.stringify(data)\r\n        });\r\n    }\r\n\r\n}\r\n\r\nconst fetchConToken = (endpoint, data, method = 'GET') => {\r\n\r\n    const url = `${baseUrl}/${endpoint}`;\r\n    const token = localStorage.getItem('token') || '';\r\n\r\n    if (method === 'GET') {\r\n        return fetch(url, {\r\n            method,\r\n            headers: {\r\n                'x-token': token\r\n            }\r\n        });\r\n    } else {\r\n        return fetch(url, {\r\n            method,\r\n            headers: {\r\n                'Content-type': 'application/json',\r\n                'x-token': token\r\n            },\r\n            body: JSON.stringify(data)\r\n        });\r\n    }\r\n\r\n}\r\n\r\nexport {\r\n    fetchSinToken,\r\n    fetchConToken\r\n}","import moment from 'moment';\r\n\r\nexport const prepareEvents = (events = []) => {\r\n    \r\n    return events.map((e) => ({\r\n        ...e,\r\n        start: moment(e.start).toDate(),\r\n        end: moment(e.end).toDate(),\r\n    }))\r\n}\r\n","import Swal from \"sweetalert2\";\r\nimport { fetchConToken } from \"../helpers/fetch\";\r\nimport { prepareEvents } from \"../helpers/prepareEvents\";\r\nimport { types } from \"../types/types\";\r\n\r\n\r\nexport const eventStartAddNew = (event) => {\r\n    return async (dispatch, getState) => {\r\n        \r\n        const {uid, name} = getState().auth;\r\n\r\n        try {\r\n            const resp = await fetchConToken('events', event, 'POST');\r\n            const body = await resp.json();\r\n\r\n            console.log(body);\r\n            \r\n            if (body.ok) {\r\n                event.id = body.evento.id;\r\n                event.user = {\r\n                    _id: uid,\r\n                    name: name\r\n                };\r\n                \r\n                dispatch( eventAddNew(event) );\r\n            }\r\n\r\n        } catch (error) {\r\n            console.log(error);\r\n        }\r\n\r\n        \r\n\r\n    }\r\n}\r\n\r\nconst eventAddNew = (event) => ({\r\n    type: types.eventAddNew,\r\n    payload: event\r\n});\r\n\r\nexport const eventSetActive = (event) => ({\r\n    type: types.eventSetActive,\r\n    payload: event\r\n});\r\n\r\nexport const eventCleanActiveEvent = () => ({\r\n    type: types.eventClearActiveEvent\r\n});\r\n\r\nexport const eventStartUpdated = (event) => {\r\n    return async(dispatch) => {\r\n        try {\r\n            const resp = await fetchConToken(`events/${event.id}`, event, 'PUT');\r\n            const body = await resp.json();\r\n            console.log(body);\r\n            if (body.ok) {\r\n                dispatch(eventUpdated(event));\r\n            } else {\r\n                Swal.fire('Error', body.msg, 'error');\r\n            }\r\n\r\n        } catch (error) {\r\n            console.log(error);\r\n        }\r\n    }\r\n}\r\n\r\nconst eventUpdated = (event) => ({\r\n    type: types.eventUpdated,\r\n    payload: event\r\n});\r\n\r\nexport const eventStartDeleted = () => {\r\n    return async (dispatch, getState) => {\r\n\r\n        const { id } = getState().calendar.activeEvent;\r\n\r\n        try {\r\n            const resp = await fetchConToken(`events/${id}`, {}, 'DELETE');\r\n            const body = await resp.json();\r\n\r\n            if (body.ok) {\r\n                dispatch(eventDeleted());\r\n            } else {\r\n                Swal.fire('Error', body.msg, 'error');\r\n            }\r\n\r\n        } catch (error) {\r\n            console.log(error);\r\n        }\r\n    }\r\n}\r\n\r\nconst eventDeleted = () => ({\r\n    type: types.eventDeleted,\r\n});\r\n\r\nexport const eventStartLoading = () => {\r\n    return async (dispatch) => {\r\n        try {\r\n            \r\n            const resp = await fetchConToken('events');\r\n            const body = await resp.json();\r\n\r\n            const events = prepareEvents(body.eventos);\r\n\r\n            dispatch( eventLoaded(events) );\r\n\r\n        } catch (error) {\r\n            console.log(error);\r\n        }\r\n    }\r\n}\r\n\r\nconst eventLoaded = (events) => ({\r\n    type: types.eventLoaded,\r\n    payload: events\r\n})\r\n\r\nexport const eventCleanEvents = () => ({\r\n    type: types.eventClearEvents\r\n})","import { fetchSinToken, fetchConToken } from \"../helpers/fetch\"\r\nimport { types } from \"../types/types\";\r\nimport Swal from \"sweetalert2\";\r\nimport { eventCleanEvents } from \"./events\";\r\n\r\nexport const startLogin = (email, password) => {\r\n    return async(dispatch) => {\r\n        \r\n        const resp = await fetchSinToken('auth', {email, password}, 'POST');\r\n        const body = await resp.json();\r\n\r\n        if (body.ok) {\r\n            localStorage.setItem('token', body.token);\r\n            localStorage.setItem('token-init-date', new Date().getTime());\r\n\r\n            dispatch( login({\r\n                uid: body.uid,\r\n                name: body.name\r\n            }) );\r\n        } else {\r\n            Swal.fire('Error', body.msg, 'error');\r\n        }\r\n\r\n    }\r\n}\r\n\r\nexport const startRegister = (email, password, name) => {\r\n    return async(dispatch) => {\r\n\r\n        const resp = await fetchSinToken('auth/new', {email, password, name}, 'POST');\r\n        const body = await resp.json();\r\n\r\n        if (body.ok) {\r\n            localStorage.setItem('token', body.token);\r\n            localStorage.setItem('token-init-date', new Date().getTime());\r\n\r\n            dispatch( login({\r\n                uid: body.uid,\r\n                name: body.name\r\n            }) );\r\n        } else {\r\n            Swal.fire('Error', body.msg, 'error');\r\n        }\r\n\r\n    }\r\n}\r\n\r\nexport const startChecking = () => {\r\n    return async (dispatch) => {\r\n        const resp = await fetchConToken('auth/renew');\r\n        const body = await resp.json();\r\n        //console.log(body);\r\n\r\n        if (body.ok) {\r\n            localStorage.setItem('token', body.token);\r\n            localStorage.setItem('token-init-date', new Date().getTime());\r\n\r\n            dispatch( login({\r\n                uid: body.uid,\r\n                name: body.name\r\n            }) );\r\n        } else {\r\n            dispatch(checkingFinish());\r\n        }\r\n\r\n    }\r\n}\r\n\r\nconst checkingFinish = () => ({\r\n    type: types.authCheckingFinish\r\n});\r\n\r\nconst login = (user) => ({\r\n    type: types.authLogin,\r\n    payload: user\r\n});\r\n\r\nexport const startLogout = (user) => {\r\n    return (dispatch) => {\r\n        localStorage.clear();\r\n        dispatch( eventCleanEvents() );\r\n        dispatch( logout() );\r\n    }\r\n}\r\n\r\nconst logout = () => ({\r\n    type: types.authLogout\r\n})","import React from 'react';\r\nimport './login.css';\r\nimport { useForm } from '../../hooks/useForm';\r\nimport { useDispatch } from 'react-redux';\r\nimport { startLogin, startRegister } from '../../actions/auth';\r\nimport Swal from 'sweetalert2';\r\n\r\nexport const LoginScreen = () => {\r\n    \r\n    const dispatch = useDispatch();\r\n\r\n    const [formLoginValues, handleLoginInputChange] = useForm({\r\n        lEmail: 'fgarciazerda@gmail.com',\r\n        lPassword: '123456',\r\n    });\r\n    \r\n    const { lEmail, lPassword } = formLoginValues;\r\n\r\n    const [formRegisterValues, handleRegisterInputChange] = useForm({\r\n        rName: 'Michi',\r\n        rEmail: 'michi@gmail.com',\r\n        rPassword1: '123456',\r\n        rPassword2: '123456',\r\n    });\r\n\r\n    const {rName, rEmail, rPassword1, rPassword2} = formRegisterValues;\r\n\r\n\r\n    const handleLogin = (e) => {\r\n        e.preventDefault();\r\n        \r\n        dispatch(startLogin(lEmail, lPassword));\r\n    };\r\n    \r\n    const handleRegister = (e) => {\r\n        e.preventDefault();\r\n        \r\n        if (rPassword1 !== rPassword2) {\r\n            return Swal.fire('Error', 'Las contraseñas deben ser iguales', 'error');\r\n        }\r\n\r\n        dispatch(startRegister(rEmail, rPassword1, rName));\r\n    };\r\n\r\n\r\n    return (\r\n        <div className=\"container login-container\">\r\n            <div className=\"row\">\r\n                <div className=\"col-md-6 login-form-1\">\r\n                    <h3>Ingreso</h3>\r\n                    <form onSubmit={ handleLogin }>\r\n                        <div className=\"form-group\">\r\n                            <input \r\n                                type=\"text\"\r\n                                className=\"form-control\"\r\n                                placeholder=\"Correo\"\r\n                                name=\"lEmail\"\r\n                                value={lEmail}\r\n                                onChange={ handleLoginInputChange }\r\n                            />\r\n                        </div>\r\n                        <div className=\"form-group\">\r\n                            <input\r\n                                type=\"password\"\r\n                                className=\"form-control\"\r\n                                placeholder=\"Contraseña\"\r\n                                name=\"lPassword\"\r\n                                value={lPassword}\r\n                                onChange={ handleLoginInputChange }\r\n                            />\r\n                        </div>\r\n                        <div className=\"form-group\">\r\n                            <input \r\n                                type=\"submit\"\r\n                                className=\"btnSubmit\"\r\n                                value=\"Login\" \r\n                            />\r\n                        </div>\r\n                    </form>\r\n                </div>\r\n\r\n                <div className=\"col-md-6 login-form-2\">\r\n                    <h3>Registro</h3>\r\n                    <form onSubmit={handleRegister}>\r\n                        <div className=\"form-group\">\r\n                            <input\r\n                                type=\"text\"\r\n                                className=\"form-control\"\r\n                                placeholder=\"Nombre\"\r\n                                name=\"rName\"\r\n                                value={rName}\r\n                                onChange={handleRegisterInputChange}\r\n                            />\r\n                        </div>\r\n                        <div className=\"form-group\">\r\n                            <input\r\n                                type=\"email\"\r\n                                className=\"form-control\"\r\n                                placeholder=\"Correo\"\r\n                                name=\"rEmail\"\r\n                                value={rEmail}\r\n                                onChange={handleRegisterInputChange}\r\n                            />\r\n                        </div>\r\n                        <div className=\"form-group\">\r\n                            <input\r\n                                type=\"password\"\r\n                                className=\"form-control\"\r\n                                placeholder=\"Contraseña\" \r\n                                name=\"rPassword1\"\r\n                                value={rPassword1}\r\n                                onChange={handleRegisterInputChange}\r\n                            />\r\n                        </div>\r\n\r\n                        <div className=\"form-group\">\r\n                            <input\r\n                                type=\"password\"\r\n                                className=\"form-control\"\r\n                                placeholder=\"Repita la contraseña\" \r\n                                name=\"rPassword2\"\r\n                                value={rPassword2}\r\n                                onChange={handleRegisterInputChange}\r\n                            />\r\n                        </div>\r\n\r\n                        <div className=\"form-group\">\r\n                            <input \r\n                                type=\"submit\" \r\n                                className=\"btnSubmit\" \r\n                                value=\"Crear cuenta\" />\r\n                        </div>\r\n                    </form>\r\n                </div>\r\n            </div>\r\n        </div>\r\n    )\r\n}","import React from 'react'\r\nimport { useDispatch, useSelector } from 'react-redux'\r\nimport { startLogout } from '../../actions/auth';\r\n\r\nexport const Navbar = () => {\r\n\r\n    const dispatch = useDispatch();\r\n\r\n    const { name } = useSelector(state => state.auth);\r\n\r\n    const handleLogout = () => {\r\n        dispatch( startLogout() );\r\n    }\r\n\r\n    return (\r\n        <div className=\"navbar navbar-dark bg-dark mb-4\">\r\n            <span className=\"navbar-brand\">\r\n                {name}\r\n            </span>\r\n            <button className=\"btn btn-outline-danger\" onClick={handleLogout}>\r\n                <i className=\"fas fa-sign-out-alt\" />\r\n                <span> Salir</span>\r\n            </button>\r\n        </div>\r\n    )\r\n}\r\n","export const messages = {\r\n    allDay: 'Todo el día',\r\n    previous: '<',\r\n    next: '>',\r\n    today: 'Hoy',\r\n    month: 'Mes',\r\n    week: 'Semana',\r\n    day: 'Día',\r\n    agenda: 'Agenda',\r\n    date: 'Fecha',\r\n    time: 'Hora',\r\n    event: 'Evento',\r\n    noEventsInRange: 'No hay eventos en este rango',\r\n    showMore: total => `+ Ver más (${total})`\r\n};","import React from 'react'\r\n\r\nexport const CalendarEvent = ({event}) => {\r\n    \r\n    const {title, user} = event;\r\n\r\n    return (\r\n        <div>\r\n            <strong>{title}</strong>\r\n            <span> - {user.name}</span>\r\n        </div>\r\n    )\r\n}\r\n","import { types } from \"../types/types\"\r\n\r\nexport const uiOpenModal = () => ({ type: types.uiOpenModal });\r\nexport const uiCloseModal = () => ({ type: types.uiCloseModal });","import React, { useEffect } from 'react';\r\nimport { useState } from 'react';\r\nimport { useSelector, useDispatch } from 'react-redux';\r\n\r\nimport Modal from 'react-modal';\r\nimport DateTimePicker from 'react-datetime-picker';\r\nimport moment from 'moment';\r\nimport Swal from 'sweetalert2'\r\nimport { uiCloseModal } from '../../actions/ui';\r\nimport { eventCleanActiveEvent, eventStartAddNew, eventStartUpdated } from '../../actions/events';\r\n\r\nconst customStyles = {\r\n    content : {\r\n      top                   : '50%',\r\n      left                  : '50%',\r\n      right                 : 'auto',\r\n      bottom                : 'auto',\r\n      marginRight           : '-50%',\r\n      transform             : 'translate(-50%, -50%)'\r\n    }\r\n};\r\n\r\nModal.setAppElement('#root');\r\n\r\nconst now = moment().minutes(0).seconds(0).add(1, 'hours');\r\nconst nowPlusOne = now.clone().add(1, 'hours');\r\n\r\nconst initEvent = {\r\n    title: '',\r\n    notes: '',\r\n    start: now.toDate(),\r\n    end: nowPlusOne.toDate()\r\n}\r\n\r\nexport const CalendarModal = () => {\r\n\r\n    const { modalOpen } = useSelector(state => state.ui);\r\n    const { activeEvent } = useSelector(state => state.calendar);\r\n    const dispatch = useDispatch();\r\n\r\n    const [dateStart, setDateStart] = useState(now.toDate());\r\n    const [dateEnd, setDateEnd] = useState(nowPlusOne.toDate());\r\n    const [titleValid, setTitleValid] = useState(true);\r\n\r\n    const [formValues, setFormValues] = useState(initEvent);\r\n\r\n    const {notes, title, start, end} = formValues;\r\n\r\n    useEffect(() => {\r\n        if (activeEvent) {\r\n            setFormValues(activeEvent);\r\n        } else {\r\n            setFormValues( initEvent );\r\n        }\r\n    }, [activeEvent, setFormValues]);\r\n\r\n    const handleInputChange = ({target}) => {\r\n        setFormValues({\r\n            ...formValues,\r\n            [target.name]: target.value\r\n        })\r\n    }\r\n\r\n    const closeModal = () => {\r\n        dispatch(uiCloseModal());\r\n        dispatch( eventCleanActiveEvent() )\r\n        setFormValues(initEvent);\r\n    };\r\n\r\n    const handleStartDateChange = (e) => {\r\n        setDateStart(e);\r\n        setFormValues({\r\n            ...formValues,\r\n            start: e\r\n        })\r\n    };\r\n\r\n    const handleEndDateChange = (e) => {\r\n        setDateEnd(e);\r\n        setFormValues({\r\n            ...formValues,\r\n            end: e\r\n        })\r\n    };\r\n\r\n    const handleSubmitForm = (e) => {\r\n        e.preventDefault();\r\n        \r\n        const momentStart = moment(start);\r\n        const momentEnd = moment(end);\r\n\r\n        if (momentStart.isSameOrAfter(momentEnd)) {\r\n            return Swal.fire('Error', 'La fecha fin debe ser mayor a la fecha de inicio', 'error');\r\n        }\r\n\r\n        if (title.trim().length < 2) {\r\n            return setTitleValid(false);\r\n        }\r\n\r\n        if (activeEvent) {\r\n            dispatch( eventStartUpdated(formValues) )\r\n        } else {\r\n            dispatch( eventStartAddNew(formValues));\r\n        }\r\n\r\n        setTitleValid(true);\r\n        closeModal();\r\n\r\n    };\r\n\r\n\r\n    return (\r\n        <Modal\r\n            isOpen={modalOpen}\r\n            onRequestClose={closeModal}\r\n            style={customStyles}\r\n            closeTimeoutMS={200}\r\n            className=\"modal\"\r\n            overlayClassName=\"modal-fondo\"\r\n            >\r\n            <h1> { activeEvent ? 'Actualizar evento' : 'Nuevo evento'} </h1>\r\n            <hr />\r\n            <form className=\"container\" onSubmit={handleSubmitForm}>\r\n                <div className=\"form-group\">\r\n                    <label>Fecha y hora inicio</label>\r\n                    <DateTimePicker\r\n                        className=\"form-control\"\r\n                        onChange={handleStartDateChange}\r\n                        value={dateStart}\r\n                    />\r\n                </div>\r\n\r\n                <div className=\"form-group\">\r\n                    <label>Fecha y hora fin</label>\r\n                    <DateTimePicker\r\n                        className=\"form-control\"\r\n                        onChange={handleEndDateChange}\r\n                        value={dateEnd}\r\n                        minDate={dateStart}\r\n                    />\r\n                </div>\r\n\r\n                <hr />\r\n                <div className=\"form-group\">\r\n                    <label>Titulo y notas</label>\r\n                    <input\r\n                        type=\"text\"\r\n                        className={`form-control ${!titleValid && 'is-invalid'}`}\r\n                        placeholder=\"Título del evento\"\r\n                        name=\"title\"\r\n                        autoComplete=\"off\"\r\n                        value={ title }\r\n                        onChange={handleInputChange}\r\n                    />\r\n                    <small id=\"emailHelp\" className=\"form-text text-muted\">\r\n                        Una descripción corta\r\n                    </small>\r\n                </div>\r\n\r\n                <div className=\"form-group\">\r\n                    <textarea\r\n                        type=\"text\"\r\n                        className=\"form-control\"\r\n                        placeholder=\"Notas\"\r\n                        rows=\"5\"\r\n                        name=\"notes\"\r\n                        value={ notes }\r\n                        onChange={handleInputChange}\r\n                    ></textarea>\r\n                    <small id=\"emailHelp\" className=\"form-text text-muted\">\r\n                        Información adicional\r\n                    </small>\r\n                </div>\r\n\r\n                <button type=\"submit\" className=\"btn btn-outline-primary btn-block\">\r\n                    <i className=\"far fa-save\"></i>\r\n                    <span> Guardar</span>\r\n                </button>\r\n            </form>\r\n        </Modal>\r\n    );\r\n}\r\n","import React from 'react'\r\nimport { useDispatch } from 'react-redux'\r\nimport { uiOpenModal } from '../../actions/ui';\r\n\r\nexport const AddNewFav = () => {\r\n\r\n    const dispatch = useDispatch();\r\n\r\n\r\n    const handleClickNew = () => {\r\n        dispatch(uiOpenModal());\r\n    }\r\n\r\n    return (\r\n        <button className=\"btn btn-primary fab\" onClick={handleClickNew}>\r\n            <i className=\"fas fa-plus\"></i>\r\n        </button>\r\n    )\r\n}\r\n","import React from 'react';\r\nimport { useDispatch } from 'react-redux';\r\nimport { eventStartDeleted } from '../../actions/events';\r\n\r\nexport const DeleteEventFab = () => {\r\n\r\n    const dispatch = useDispatch();\r\n\r\n    const handleDelete = () => {\r\n        dispatch( eventStartDeleted() );\r\n    }\r\n    \r\n    return (\r\n        <button \r\n            className=\"btn btn-danger fab-danger\"\r\n            onClick={handleDelete} \r\n        >\r\n            <i className=\"fas fa-trash\"></i>\r\n            <span> Borrar evento</span>\r\n        </button>\r\n    )\r\n}\r\n","import React, { useState, useEffect } from 'react';\r\nimport { useDispatch, useSelector } from 'react-redux';\r\nimport {Calendar, momentLocalizer} from 'react-big-calendar';\r\nimport moment from 'moment';\r\n\r\nimport { Navbar } from '../ui/Navbar';\r\nimport 'react-big-calendar/lib/css/react-big-calendar.css';\r\nimport { messages } from '../../helpers/calendar-messages-es';\r\n\r\nimport 'moment/locale/es';\r\nimport { CalendarEvent } from './CalendarEvent';\r\nimport { CalendarModal } from './CalendarModal';\r\nimport { uiOpenModal } from '../../actions/ui';\r\nimport { eventSetActive, eventCleanActiveEvent, eventStartLoading } from '../../actions/events';\r\nimport { AddNewFav } from '../ui/AddNewFav';\r\nimport { DeleteEventFab } from '../ui/DeleteEventFab';\r\nmoment.locale('es');\r\n\r\nconst localizer = momentLocalizer(moment); // or globalizeLocalizer\r\n\r\n/* const events = [{\r\n    title: 'Cumpleaños del jefe',\r\n    start: moment().toDate(),\r\n    end: moment().add(2, 'hours').toDate(),\r\n    bgcolor: '#fafafa',\r\n    notes: 'Comprar el pastel',\r\n    user: {\r\n        _id: '123',\r\n        name: 'Fabricio'\r\n    }\r\n}]; */\r\n\r\nexport const CalendarScreen = () => {\r\n\r\n    const dispatch = useDispatch();\r\n    const { events, activeEvent } = useSelector(state => state.calendar);\r\n    const { uid } = useSelector( state => state.auth );\r\n\r\n    const [lastView, setLastView] = useState(localStorage.getItem('lastView') || 'month')\r\n\r\n    useEffect(() => {\r\n        \r\n        dispatch( eventStartLoading() );\r\n        \r\n    }, [dispatch])\r\n\r\n    const onDoubleClick = (e) => {\r\n        dispatch(uiOpenModal());\r\n    }\r\n\r\n    const onSelect = (e) => {\r\n        dispatch(eventSetActive(e));\r\n    }\r\n\r\n    const onViewChange = (e) => {\r\n        setLastView(e);\r\n        localStorage.setItem('lastView', e);\r\n    }\r\n\r\n    const onSelectSlot = (e) => {\r\n        dispatch( eventCleanActiveEvent() );\r\n    }\r\n\r\n    const eventStyleGetter = (event, start, end, isSelected) => {\r\n\r\n        const style = {\r\n            backgroundColor: (uid === event.user._id) ? '#367cf7' : '#465660',\r\n            borderRadius: '0px',\r\n            opacity: 0.8,\r\n            display: 'block',\r\n            color: 'white'\r\n        }\r\n        \r\n        return {\r\n            style\r\n        }\r\n    }\r\n\r\n    return (\r\n    <div className=\"calendar-screen\">\r\n        <Navbar />\r\n\r\n        <Calendar\r\n            localizer={localizer}\r\n            events={events}\r\n            startAccessor=\"start\"\r\n            endAccessor=\"end\"\r\n            messages={messages}\r\n            eventPropGetter={eventStyleGetter}\r\n            onDoubleClickEvent={onDoubleClick}\r\n            onSelectEvent={onSelect}\r\n            onView={onViewChange}\r\n            view={lastView}\r\n            onSelectSlot={onSelectSlot}\r\n            selectable={true}\r\n            components={{\r\n                event: CalendarEvent\r\n            }}\r\n        />\r\n\r\n        { activeEvent && <DeleteEventFab /> }\r\n        \r\n        <AddNewFav />\r\n\r\n        <CalendarModal />\r\n\r\n    </div>);\r\n};\r\n","import React from 'react';\r\nimport PropTypes from 'prop-types';\r\n\r\nimport { Route, Redirect } from 'react-router-dom';\r\n\r\nexport const PublicRoute = ({ isAuthenticated, component: Component, ...rest }) => {\r\n    return (\r\n        <Route\r\n            {...rest}\r\n            component={(props) =>\r\n                isAuthenticated \r\n                    ? <Redirect to='/' /> \r\n                    : <Component {...props} />\r\n            }\r\n        />\r\n    );\r\n};\r\n\r\nPublicRoute.propTypes = {\r\n    isAuthenticated: PropTypes.bool.isRequired,\r\n    component: PropTypes.func.isRequired,\r\n};\r\n","import React from 'react';\r\nimport PropTypes from 'prop-types';\r\n\r\nimport { Route, Redirect } from 'react-router-dom';\r\n\r\nexport const PrivateRoute = ({ isAuthenticated, component: Component, ...rest }) => {\r\n    //\r\n\r\n    return (\r\n        <Route\r\n            {...rest}\r\n            component={(props) =>\r\n                isAuthenticated \r\n                    ? <Component {...props} /> \r\n                    : <Redirect to='/login' />\r\n            }\r\n        />\r\n    );\r\n};\r\n\r\nPrivateRoute.propTypes = {\r\n    isAuthenticated: PropTypes.bool.isRequired,\r\n    component: PropTypes.func.isRequired,\r\n};\r\n","import React, { useEffect } from 'react';\r\nimport { BrowserRouter as Router, Switch, Redirect } from 'react-router-dom';\r\nimport { LoginScreen } from '../components/auth/LoginScreen';\r\nimport { CalendarScreen } from '../components/calendar/CalendarScreen';\r\nimport { useDispatch, useSelector } from 'react-redux';\r\nimport { startChecking } from '../actions/auth';\r\nimport { PublicRoute } from './PublicRoute';\r\nimport { PrivateRoute } from './PrivateRoute';\r\n\r\nexport const AppRouter = () => {\r\n\r\n    const dispatch = useDispatch();\r\n    const { checking, uid } = useSelector(state => state.auth);\r\n\r\n    useEffect(() => {\r\n        \r\n        dispatch( startChecking() );\r\n        \r\n    }, [dispatch]);\r\n\r\n    if (checking) {\r\n        return <h5>Espere...</h5>\r\n    }\r\n\r\n    return (\r\n        <Router>\r\n            <div>\r\n                <Switch>\r\n\r\n                    <PublicRoute \r\n                        exact \r\n                        path='/login' \r\n                        component={LoginScreen} \r\n                        isAuthenticated={ !!uid }\r\n                    />\r\n\r\n                    <PrivateRoute \r\n                        exact \r\n                        path='/' \r\n                        component={CalendarScreen} \r\n                        isAuthenticated={ !!uid }\r\n                    />\r\n                    \r\n                    <Redirect to='/' />\r\n\r\n                </Switch>\r\n            </div>\r\n        </Router>\r\n    );\r\n};\r\n","import React from 'react';\r\nimport { Provider } from 'react-redux';\r\n\r\nimport { store } from './store/store';\r\nimport { AppRouter } from './router/AppRouter';\r\n\r\nexport const CalendarApp = () => {\r\n    return (\r\n        <div>\r\n            <Provider store={store}>\r\n                <AppRouter />\r\n            </Provider>\r\n        </div>\r\n    );\r\n};\r\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport { CalendarApp } from './CalendarApp';\n\nimport './styles.css';\n\n//console.log(process.env);\n\nReactDOM.render(\n    <CalendarApp />, document.getElementById('root')\n);"],"sourceRoot":""}